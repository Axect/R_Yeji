df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
val_min <- dgdc(theta, 0)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + ggline(df, y = "val_min", color="black", plot_type="l")
p <- p + scale_color_continuous(low="orange", high="white")
p
help(ggadd)
library(ggpubr)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
val_min <- dgdc(theta, 0)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low="orange", high="white")
p
ggline(df, y = "val_min", color="black", plot_type="l")
library(ggpubr)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
val_min <- dgdc(theta, 0)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low="orange", high="white")
p
ggline(df, x = "co", y = "val_min", color="black", plot_type="l")
c(1,2,"a")
a <- c(1,2,"black")
expand.grid(a,1:4)
"1" < "2"
as.numeric("1")
library(ggpubr)
theta <- seq(0, pi, 0.01)
eps <- c("black", seq(0, 1, 0.01))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], as.numeric(domains['eps']))
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
val_min <- dgdc(theta, 0)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low="orange", high="white")
p
library(ggpubr)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
val_min <- dgdc(theta, 0)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low="orange", high="white")
p
library(ggpubr)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
eps0 <- "black"
domain2 <- expand.grid(eps0, theta)
names(domain2) <- c("eps", "theta")
image2 <- dgdc(domain2['theta'], 0)
dg <- data.frame(domain2, image2)
dg <- within(dg, {
co <- cos(theta)
})
dh <- rbind(df, dg)
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low="orange", high="white")
p
library(ggpubr)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
eps0 <- "black"
domain2 <- expand.grid(eps0, theta)
names(domain2) <- c("eps", "theta")
image2 <- dgdc(domain2['theta'], 0)
dg <- data.frame(domain2, image2)
names(dg) <- c("eps", "theta", "val")
dg <- within(dg, {
co <- cos(theta)
})
dh <- rbind(df, dg)
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low="orange", high="white")
p
View(dh)
View(dh)
help("palette")
length(eps)
pa <- palette(gray(seq(0,.9,len=102)))
pa
require(graphics)
pa <- palette(gray(seq(0,.9,len=102)))
pa
colorRampPalette("orange")
colorRampPalette(c("orange", "white"))
colorRampPalette(c("orange", "white"), asp = 1)
colorRampPalette(c("orange", "white"), space="rgb")
colorRampPalette(c("orange", "white"), space="rgb")(100)
pa <- "black" + colorRampPalette(c("orange", "white"), space="rgb")(101)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
pa
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(100))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", palette = pa, color = "eps", group = "eps", plot_type = "l", size=1.1)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", palette = pa, color = "eps", group = "eps", plot_type = "l", size=1.1)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", palette = pa, color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_discrete(breaks=c(0.01, 1))
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", palette = pa, color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continous()
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(space=pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_discrete(space=pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continous(low = "orange", high = "white")
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low = "orange", high = "white")
p
library(ggpubr)
#require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
#pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_continuous(low = "orange", high = "white")
p
library(ggpubr)
#require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
#pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_gradient(low = "orange", high = "white")
p
library(ggpubr)
#require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
#pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(dh, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_gradient(low = "orange", high = "white")
p
library(ggpubr)
#require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
#pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_gradient(low = "orange", high = "white")
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_gradient(colors=pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_gradient(colors = pa, low="orange", high="white")
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.1)
p <- p + scale_color_gradientn(colors = pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=1.0)
p <- p + scale_color_gradientn(colors = pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=0.8)
p <- p + scale_color_gradientn(colors = pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=0.5)
p <- p + scale_color_gradientn(colors = pa)
p
dir(path = )
dir
dir("Documents/")
cd()
while (condition) {
}
setwd("Documents/Project/R_Project/Plot/")
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=0.5)
p <- p + scale_color_gradientn(colors = pa)
p
par(new=TRUE)
plot(0:1,0:1)
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("orange", "white"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=0.5)
p <- p + scale_color_gradientn(colors = pa)
p
library(ggpubr)
require(graphics)
theta <- seq(0, pi, 0.01)
eps <- seq(0, 1, 0.01)
pa <- c("black", colorRampPalette(c("white", "orange"), space="rgb")(101))
dgdc <- function(The, Eps) (3*sin(The)^2 + 2*Eps)/(4*(1 + Eps))
domains <- expand.grid(eps, theta)
names(domains) <- c("eps", "theta")
images <- dgdc(domains['theta'], domains['eps'])
df <- data.frame(domains, images)
names(df) <- c("eps", "theta", "val")
df <- within(df, {
co <- cos(theta)
})
p <- ggline(df, x = "co", y = "val", color = "eps", group = "eps", plot_type = "l", size=0.8)
p <- p + scale_color_gradientn(colors = pa)
p
